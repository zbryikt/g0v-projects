// Generated by LiveScript 1.2.0
var fs, request, buf, data, opt, req, prjs, ref$, c1, c2, k, v, i$, len$, it, link, ret;
fs = require('fs');
request = require('request');
buf = fs.readFileSync('index.json');
data = JSON.parse(buf.toString());
opt = {
  client_id: 'ab2376373fe2da1ccb17',
  client_secret: '6560c859d46e79f00dade30999ee62ca5052437d'
};
req = {
  method: 'GET',
  headers: {
    "User-Agent": "Mozilla/5.0 (Windows NT 6.1; WOW64)"
  },
  qs: opt
};
prjs = {};
ref$ = [0, 0], c1 = ref$[0], c2 = ref$[1];
for (k in data) {
  v = data[k];
  for (i$ = 0, len$ = (ref$ = v.items).length; i$ < len$; ++i$) {
    it = ref$[i$];
    if (!(link = it.formattedUrl)) {
      continue;
    }
    ret = /github.com\/([^\/]+)\/([^\/]+)\/blob\/master\/g0v.json/.exec(link);
    if (!ret) {
      continue;
    }
    c1++;
  }
}
for (k in data) {
  v = data[k];
  for (i$ = 0, len$ = (ref$ = v.items).length; i$ < len$; ++i$) {
    it = ref$[i$];
    if (!(link = it.formattedUrl)) {
      continue;
    }
    ret = /github.com\/([^\/]+)\/([^\/]+)\/blob\/master\/g0v.json/.exec(link);
    if (!ret) {
      continue;
    }
    fn$(ret[1], ret[2]);
  }
}
function fn$(user, name){
  req.url = "https://api.github.com/repos/" + user + "/" + name + "/stats/contributors";
  return request(req, function(e, r, b){
    var commits, d;
    commits = 0;
    d = JSON.parse(b);
    (prjs[user] || (prjs[user] = {}))[name] = d;
    c2++;
    console.log(c1, c2);
    if (c2 === c1) {
      return fs.writeFileSync('output.json', JSON.stringify(prjs));
    }
  });
}